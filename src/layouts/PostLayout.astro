---
import { SEO } from "astro-seo";
import i18next, { t } from "i18next";
// import Navbar from "../components/navbar/Navbar";
// import Footer from "../components/footer/Footer";
import Navbar from "../components/navbar/Navbar.astro";



// const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

// const resolvedImageWithDomain = new URL(
//   "/opengraph.jpg",
//   Astro.site
// ).toString();

// const { title } = Astro.props;

// const makeTitle = title
//   ? title + " | " + "Astroship"
//   : "Astroship - Starter Template for Astro with Tailwind CSS";

export interface Props {
	title: string;
}
// console.log("layout")
// const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const data = await fetch(`${import.meta.env.API_URL}/globals/navbar`).then((response) => 
response.json());

// const {meta} = Astro.props;
// console.log(data);
---

<!DOCTYPE html>
<html lang={i18next.language} class="bg-white dark:bg-gray-800">
	<head>
		<script>
			// On page load or when changing themes, best to add inline in `head` to avoid FOUC
			if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark')
			}
		</script>
		<!-- <meta charset="UTF-8" />
		<meta name="description" content={meta.description}>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} /> -->
		<!-- <SEO
		title={meta.title}
		description={meta.description}

		twitter={{
		  creator: "@surjithctly",
		  site: "@web3templates",
		  card: "summary_large_image",
		}}

	  />   -->
	</head>
	<body>
		<Navbar data={data} />
		<slot />
		<!-- <Footer /> -->
	</body>
</html>

